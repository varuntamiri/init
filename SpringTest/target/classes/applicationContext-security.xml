<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd	   		
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="com.msat" />

	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Load Hibernate related configuration -->

	<bean id="propertiesConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="packagesToScan" value="com.msat.dao" />
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.msat.vo.UserPolicyVO</value>
				<value>com.msat.vo.UserVO</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.hbm2ddl.import_files">/query.sql</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="org.hsqldb.jdbcDriver"
		p:jdbcUrl="jdbc:hsqldb:mem:test" p:user="sa" p:password="" 
		p:acquireIncrement="5" p:idleConnectionTestPeriod="60" p:maxPoolSize="100"
		p:maxStatements="50" p:minPoolSize="10" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- Security Configuration -->
	<security:global-method-security
		secured-annotations="enabled" />

	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/sample/auth/denied">

		<security:form-login login-page="/sample/auth/login"
			authentication-failure-url="/sample/auth/login?error=true"
			default-target-url="/sample/insurance/common" />

		<security:logout invalidate-session="true"
			logout-success-url="/sample/auth/login" logout-url="/sample/auth/logout" />

	</security:http>

	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- ThreadLocalTargetSource Implementation -->

<!-- 	<bean id="loginThreadLocalTargetSource" class="org.springframework.aop.target.ThreadLocalTargetSource" -->
<!-- 		destroy-method="destroy"> -->
<!-- 		<property name="targetBeanName" value="loginTarget" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="loginBean" class="org.springframework.aop.framework.ProxyFactoryBean"> -->
<!-- 		<property name="targetSource" ref="loginThreadLocalTargetSource" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="loginBeanUtil" class="com.msat.controller.LoginDetailHandler"> -->
<!-- 		<property name="loginBean" ref="loginTarget" /> -->
<!-- 	</bean> -->

</beans>
